{"version":3,"file":"static/js/769.d22b87a4.chunk.js","mappings":"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","sources":["chat/Home.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport io from \"socket.io-client\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport axios from \"axios\";\r\nimport Auth from \"./Auth\";\r\n\r\nconst Home = () => {\r\n  const [user, setUser] = useState({ userName: \"\", roomName: \"\" });\r\n  const [rooms, setRooms] = useState();\r\n  const [isCreate, setCreateRoom] = useState(false);\r\n  const [isError, setError] = useState();\r\n\r\n  const { addToast } = useToasts();\r\n  const socketRef = useRef();\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    socketRef.current = io.connect(\"/\");\r\n    socketRef.current.on(\"rooms\", (availableRoom) => {\r\n      setRooms(Object.keys(availableRoom));\r\n    });\r\n\r\n    socketRef.current.on(\"create-room\", (newRoom) => {\r\n      setRooms((rooms) => [...rooms, newRoom]);\r\n      addToast(`${newRoom}  Room create successfully`, {\r\n        appearance: \"success\",\r\n        autoDismiss: true,\r\n      });\r\n      setCreateRoom(false);\r\n      setError(\"\");\r\n      setUser({ userName: \"\", roomName: \"\" });\r\n    });\r\n  }, []);\r\n\r\n  function creatrOrJoin(e) {\r\n    e.preventDefault();\r\n    if (isCreate) {\r\n      axios\r\n        .post(\"/create\", {\r\n          user,\r\n        })\r\n        .catch((err) => {\r\n          setError(err && err.response && err.response.data.error);\r\n        });\r\n    } else {\r\n      Auth.authenticate();\r\n      axios\r\n        .post(\"/join\", {\r\n          user,\r\n        })\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            history.push(\"/chat\", user);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          setError(err && err.response && err.response.data.error);\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"section-1-container section-container\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div\r\n            className=\"col-md-8 col-sm-12 col-xs-12\r\n           offset-md-1 col-lg-8 offset-lg-2 \r\n            d-flex justify-content-center \r\n            align-items-center\"\r\n          >\r\n            <div className=\"div-to-align\">\r\n              {isError ? (\r\n                <div className=\"alert alert-danger\"> {isError}</div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <div className=\"card rounded-1 chat-room-card\">\r\n                <div className=\"card-header chat-header-title\">\r\n                  <h3 className=\"mb-0 text-center\">\r\n                    {isCreate ? \"Create Chat Room\" : \"Random Chat\"}\r\n                  </h3>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <form\r\n                    className=\"form\"\r\n                    onSubmit={creatrOrJoin}\r\n                    //action=\"/create\" method=\"POST\"\r\n                    autoComplete=\"off\"\r\n                    id=\"formLogin\"\r\n                  >\r\n                    {!isCreate ? (\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"uname\">Room Name</label>\r\n                        <select\r\n                          className=\"form-control rounded-0 border-0 bg-light\"\r\n                          value={user.roomName}\r\n                          onChange={(e) =>\r\n                            setUser({\r\n                              ...user,\r\n                              roomName: e.target.value,\r\n                            })\r\n                          }\r\n                          required\r\n                        >\r\n                          {\" \"}\r\n                          <option value=\"\"> -Select room - </option>\r\n                          {rooms &&\r\n                            rooms.map((roomName, index) => (\r\n                              <option key={index} value={roomName}>\r\n                                {\" \"}\r\n                                {roomName}\r\n                              </option>\r\n                            ))}\r\n                        </select>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"uname\">Room Name</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          required\r\n                          aria-describedby=\"button-addon2\"\r\n                          className=\"form-control rounded-0 border-0 py-4 bg-light\"\r\n                          value={user.roomName}\r\n                          onChange={(e) =>\r\n                            setUser({\r\n                              ...user,\r\n                              roomName: e.target.value,\r\n                            })\r\n                          }\r\n                          autoComplete=\"off\"\r\n                          autoFocus=\"on\"\r\n                          placeholder=\"Please Enter room name\"\r\n                        />\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"uname\">Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        required\r\n                        aria-describedby=\"button-addon2\"\r\n                        className=\"form-control rounded-0 border-0 py-4 bg-light\"\r\n                        value={user.userName}\r\n                        onChange={(e) =>\r\n                          setUser({ ...user, userName: e.target.value })\r\n                        }\r\n                        autoComplete=\"off\"\r\n                        autoFocus=\"on\"\r\n                        placeholder=\"Please Enter your name\"\r\n                      />\r\n                    </div>\r\n\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-success btn-block font-weight-bold\"\r\n                    >\r\n                      {isCreate ? \" Create\" : \"Join\"}\r\n                    </button>\r\n\r\n                    {isCreate ? (\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                          setCreateRoom(false);\r\n                          setError(\"\");\r\n                          setUser({ userName: \"\", roomName: \"\" });\r\n                        }}\r\n                        className=\"btn btn-info btn-block font-weight-bold\"\r\n                      >\r\n                        Cancel\r\n                      </button>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"row\">\r\n          {rooms && rooms.map((roomName) => <Room title={roomName} />)}\r\n        </div> */}\r\n        <button\r\n          onClick={() => setCreateRoom(!isCreate)}\r\n          title=\"Create chat room\"\r\n          className=\"btn btn-rounded float\"\r\n        >\r\n          <i className=\"fa fa-plus my-float\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["_useState","useState","userName","roomName","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","rooms","setRooms","_useState5","_useState6","isCreate","setCreateRoom","_useState7","_useState8","isError","setError","addToast","useToasts","socketRef","useRef","history","useHistory","useEffect","current","io","on","availableRoom","Object","keys","newRoom","concat","_toConsumableArray","appearance","autoDismiss","React","className","onSubmit","e","preventDefault","axios","catch","err","response","data","error","Auth","then","res","status","push","autoComplete","id","htmlFor","type","required","value","onChange","_objectSpread","target","autoFocus","placeholder","map","index","key","onClick","title"],"sourceRoot":""}